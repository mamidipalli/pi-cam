import boto
import boto.s3
import sys
import requests
import io
#from StringIO import StringIO
import urllib
from PIL import Image

from boto.s3.key import Key
from gpiozero import DistanceSensor
from picamera import PiCamera
from datetime import datetime
ultrasonic = DistanceSensor(echo=17, trigger=4)
ultrasonic.distance

c = boto.connect_s3("AKIAJFDNGSITR26VKKT","mgl1g3qrVvhnKwb27wjLRpF7RLSgV1dCRXkAQX6z")
print("Log 1")
b = c.get_bucket("face-collection", validate=False)
print("Log 2")
camera = PiCamera()
print("Log 3")
def captureImage():
    #datetime = datetime.now().isoformat()
    #camera.capture('/tmp/%s.jpg' %datetime)
    camera.capture('/tmp/picampic1.jpg')
    print("Image Captured")
    
    print("Uploading to S3")
    file=open('picampic1.jpg')
    img = io.StringIO(fp.read())
    im = Image.open(img)
 
    #Resize the image
    im2 = im.resize((500, 100), Image.NEAREST)  

#NOTE, we're saving the image into a cStringIO object to avoid writing to disk
    out_im2 = io.StringIO()
#You MUST specify the file type because there is no file name to discern it from
    im2.save(out_im2, 'JPG')

#Now we connect to our s3 bucket and upload from memory
#credentials stored in environment AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
    conn = boto.connect_s3()

#Connect to bucket and create key
    b = conn.get_bucket('rekognition-usecases') 
    k = b.new_key('picampic1.jpg')

#Note we're setting contents from the in-memory string provided by cStringIO
    k.set_contents_from_string(out_im2.getvalue())







while True:
    #ultrasonic.wait_for_in_range()
    #print("In range")
    #ultrasonic.wait_for_out_of_range()
    #print("Out of range")
    ultrasonic.when_in_range = captureImage
    #print("In range")
